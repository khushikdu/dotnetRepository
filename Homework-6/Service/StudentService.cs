using Homework_6.Model;

namespace Homework_6.Service
{
    public class StudentService
    {
        private List<Student> _studentsList;
        private int _autoGeneratedID;

        public StudentService()
        {
            _studentsList = new List<Student>();
            _autoGeneratedID = 1;
        }
        public int AddStudent(StudentRequestDTO student)
        {
            // Validations
            if (student.Grade.Length != 1 || !char.IsLetter(student.Grade[0]) || !char.ToUpper(student.Grade[0]).Equals('A') && !char.ToUpper(student.Grade[0]).Equals('B') && !char.ToUpper(student.Grade[0]).Equals('C') && !char.ToUpper(student.Grade[0]).Equals('D') && !char.ToUpper(student.Grade[0]).Equals('F'))
            {
                throw new ArgumentException("Grade must be a single character only (A, B, C, D, or F).");
            }
            var newStudent = new Student
            {
                Id = _autoGeneratedID++,
                Name = student.Name,
                Age = student.Age,
                Grade = student.Grade
            };
            _studentsList.Add(newStudent);
            return newStudent.Id;
        }
        public Student GetStudentById(int id)
        {
            return _studentsList.FirstOrDefault(s => s.Id == id);
        }
        public List<Student> GetAllStudents()
        {
            return _studentsList;
        }

        public void UpdateStudent(int id, Student newStudent)
        {
            var student = _studentsList.FirstOrDefault(s => s.Id == id);
            if (student != null)
            {
                student.Name = newStudent.Name;
                student.Age = newStudent.Age;
                student.Grade = newStudent.Grade;
            }
        }
        public int GetTotalStudents()
        {
            return _studentsList.Count;
        }
        public bool DeleteStudent(int id)
        {
            var student = _studentsList.FirstOrDefault(s => s.Id == id);
            if (student != null)
            {
                _studentsList.Remove(student);
                return true;
            }
            return false;
        }
    }
}
